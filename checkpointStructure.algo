PROCEDURE Dot_product(v1,v2 : ARRAY_OF FLOAT[3])
VAR
    i:INTEGER;
    ps:FLOAT;
BEGIN
   ps:=0;
    FOR i FROM 0 TO 2 STEP 1  DO
        ps:=ps+v1[i]*v2[i];
    END_FOR
END

FUNCTION prodScal(v1,v2 : ARRAY_OF FLOAT[3]) :FLOAT
VAR
   i:INTEGER;
    ps:FLOAT
BEGIN
    ps=0;
    FOR i FROM 0 TO 2 STEP 1  DO
        ps=ps+v1[i]*v2[i];
    END_FOR
    RETURN ps ;
END


ALGORITHM orthogonal
VAR
    v1,v2 : ARRAY_OF FLOAT[3];
    ps:=FLOAT;
    i:INTEGER;
  

BEGIN
FOR i FROM 0 TO 2 STEP 1  DO
     write("donner valeur de vecteur 1");
    Read(v1(i));
    write("donner valeur de vecteur 2");
    Read(v2(i));
END_FOR
 
   Dot_product(v1,v2)
   write(ps);
    verif(ps)
END

PROCEDURE verif(ps:INTEGER)
VAR
    
BEGIN
      IF (ps=0) THEN
       write("vectors are orthogonal")
   ELSE
       write(" vectors are not orthogonal")
   END_IF
END